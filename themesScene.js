import {Markup, Scenes, session} from "telegraf";
import { themes } from "./themes.js";

export const themesScene = new Scenes.BaseScene('themes');

themesScene.enter(async (ctx) => {
  const text = themes.reduce((text, theme, index) => text + `${index+1}: ${theme.title}\n`, '–¢–µ–º–∏:\n\n');
  await ctx.reply(text, Markup.keyboard(['–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å –Ω–∞–∑–∞–¥']).oneTime().resize());
})

themesScene.hears('–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å –Ω–∞–∑–∞–¥',async (ctx) => {
  session.index = undefined;
  const text = `–î–ª—è –ø–æ—á–∞—Ç–∫—É –Ω–∞–≤—á–∞–Ω–Ω—è, –∞–±–æ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –≤–∞—à–∏—Ö –∑–Ω–∞–Ω—å –∑ —Ü–∏—Ñ—Ä–æ–≤—ñ–π –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—ñ, –Ω–∞—Ç–∏—Å–Ω—ñ—Å—Ç—å:
  üëâüèª –û–±—Ä–∞—Ç–∏ —Ç–µ–º—É                                            
  üëâüèª–ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω`
  await ctx.reply(text, Markup.inlineKeyboard([
    Markup.button.callback('–û–±—Ä–∞—Ç–∏ —Ç–µ–º—É', 'themes'),
    Markup.button.callback('–ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è', 'test'),
  ]).oneTime().resize());
  return ctx.scene.leave();
});

themesScene.on('text', async (ctx) => {
  const index = +ctx.message.text;
  if (isNaN(index) || index < 1 || index > themes.length) {
    ctx.reply('–ü—ñ—à–æ–≤ –Ω–∞—Ö—É–π —Ä–æ–∑–±—ñ–π–Ω–∏–∫');
  } else {
    session.index = index;
    await ctx.scene.enter('subtopics');
  }
});

